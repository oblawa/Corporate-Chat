<Window x:Class="CorporateChat.AuthotizationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CorporateChat"
        xmlns:viewmodel="clr-namespace:CorporateChat.ViewModel"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="Авторизация"
        Height="292"
        Width="418" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" WindowStyle="None" Icon="/View/Icons/logo.png"
        >
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding ConnectToServerCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonKey" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="11" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#746FAE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#746FAE"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#8D89B5"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#8D89B5"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <viewmodel:AuthViewModel/>
    </Window.DataContext>
    <Grid Background= "#B89C99" Height="292" Width="418">
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="272"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button BorderThickness="0" Background="Transparent" x:Name="buttonMinimize">
                <Image x:Name="imageMinimize" Source="Icons/window_minimize_icon_194428.png" Height="13"></Image>

            </Button>
            <Button BorderThickness="0" Background="Transparent" x:Name="buttonExit">
                <Image  x:Name="imageExit"  Source="Icons/close_cross_icon_128690.png"></Image>
            </Button>
        </StackPanel>
        <StackPanel Grid.Row="0" Height="NaN" Grid.RowSpan="2" Width="NaN">
            <TextBlock Text="Авторизация" TextAlignment="Center" FontSize="26" Grid.Row="1" Margin="0,36,0,26" Height="NaN" Width="NaN"></TextBlock>
            <TextBox x:Name="loginTb" Text="{Binding username, UpdateSourceTrigger=PropertyChanged}" Width="326" Height="37" Margin="0 0 0 13" Style="{StaticResource LoginBox1}"/>


            <PasswordBox x:Name="passwordTb" PasswordChanged="OnPasswordChanged" Width="326" Height="37" Margin="0 0 0 26" Style="{StaticResource PasswordBox1}"/>
            
            <Button Style="{DynamicResource RoundedButtonKey}" Command="{Binding SendAuthDataCommand}" x:Name="buttonLogIn" Background="#655FA6" Foreground="White" Content="Войти" Width="118" Height="34" FontSize="19" Margin="0 0 0 8"/>
            <Button Style="{StaticResource TransparentText}" Command="{Binding OpenRegWindowCommand}" x:Name="buttonFirstTime" Padding="0" Width="105" Height="30" Background="Transparent" BorderThickness="0"><TextBlock TextWrapping="WrapWithOverflow"   Margin="0" FontSize="13" /></Button>
            
        </StackPanel>
        
    </Grid>
</Window>
